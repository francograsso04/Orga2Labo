PUNTEROS

Un puntero es una variable que almacena una direccion de memoria.
ej. int*, char*, void*, etc..

Cada posicion de memoria es de 1 byte, 
una int ocupa 4 bytes y un char 1.

Puntero void

// void* ptr;
// int x = 42;
// ptr = &x; // ptr apunta a la direcci ÃÅon de x
// // Convertir el puntero void* a un puntero int*
// int* p = (int*)ptr;
// printf("Valor: %d\n", *p); // Imprime 42

Hay que pasar void a int.



Puntero Null

Es buena practica para inicializar punteros.



Aritmetica de punteros
Podemos hacer operaciones matematicas con punteros

Un array se representa como un puntero al primer elemento. 

uint32_t a[] = {28,7,92};
uint32_t *pi = a;
printf("%d\n", *pi); //28

Si queremos acceder al 7, hacemos:

pi += 1;
printf("%d\n", *pi); //7
pi += 1;
printf("%d\n", *pi); //92+


Como pi es uint32_t, cuando sumamos 1 en pi, estamos direccionando la memoria 4bytes.

Punteros como argumentos: Podemos pasar punteros como argumentos asi cambiamos la direccion de memoria.


Strings revisited


